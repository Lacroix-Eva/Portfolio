---
import "../styles/global.css";
import Header from "../components/Header.astro";

const { ...item } = Astro.props;
---

<!doctype html>
<html lang="fr" data-theme="Portfolio">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta
      name="description"
      content={"Portfolio d'Eva Lacroix || " + item.description}
    />
    <title>Eva Lacroix - {item.titre}</title>
  </head>

  <body
    class="relative min-h-screen flex flex-col bg-base-100text-base-content overflow-hidden"
  >
    <div
      id="background-stars"
      class="fixed inset-0 z-[-1] pointer-events-none"
      aria-hidden="true"
    >
    </div>
    <Header item={{ img: item.imgTitre }} />
    <slot />
  </body>
</html>

<script>
  // Fond étoilé dynamique avec adaptation mobile
  const container = document.getElementById("background-stars");

  // Détection mobile avec matchMedia
  const isMobile = window.matchMedia("(max-width: 768px)").matches;

  // Adaptation du nombre d'éléments selon l'écran
  const total = isMobile ? 30 : 60; // 30 sur mobile, 60 sur desktop

  for (let i = 0; i < total; i++) {
    const el = document.createElement("div");
    const isStar = Math.random() < 0.25; // 25% étoiles ✦, 75% points

    if (isStar) {
      el.textContent = "✦";
      el.className = "absolute text-white opacity-80 animate-twinkle";

      // Tailles adaptées: plus petites sur mobile
      const starSize = isMobile
        ? Math.random() * 0.6 + 0.3 // mobile: 0.3-0.9rem
        : Math.random() * 0.8 + 0.4; // desktop: 0.4-1.2rem
      el.style.fontSize = `${starSize}rem`;
    } else {
      el.className =
        "absolute bg-white rounded-full opacity-70 animate-twinkle";
      // Points plus fins sur mobile
      const pointSize = isMobile
        ? Math.random() * 1 + 0.5 // mobile: 0.5-1.5px
        : Math.random() * 2 + 1; // desktop: 0.8-2.3px
      el.style.width = `${pointSize}px`;
      el.style.height = `${pointSize}px`;
    }

    const depth = Math.random();
    el.style.left = `${Math.random() * 100}%`;
    el.style.top = `${Math.random() * 100}%`;
    el.style.animationDelay = `${Math.random() * 4}s`;
    el.style.opacity = `${0.3 + 0.5 * depth}`;
    el.style.transform = `scale(${0.4 + depth * 0.6})`;
    el.style.zIndex = `${Math.floor(depth * 10)}`;
    el.style.animation = `twinkle ${4 + depth * 4}s ease-in-out infinite, float ${9 + depth * 5}s ease-in-out infinite`;

    container.appendChild(el);
  }

  // Réinitialisation responsive lors du redimensionnement
  window.addEventListener("resize", () => {
    const wasMobile = container.dataset.isMobile === "true";
    const isNowMobile = window.matchMedia("(max-width: 768px)").matches;

    // Recharger seulement si passage mobile ↔ desktop
    if (wasMobile !== isNowMobile) {
      container.innerHTML = "";
      container.dataset.isMobile = isNowMobile;
      location.reload(); // ou réexécuter le script
    }
  });

  container.dataset.isMobile = isMobile;
</script>
